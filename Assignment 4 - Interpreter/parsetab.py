
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'global_factsleftORANDnonassocEQUALLESSTHANGREATERTHANleftPLUSMINUSleftTIMESDIVIDErightUMINUSleftLBRACERBRACEAND ASSIGN COMMA DIVIDE DOT ELSE END EQUAL EXEC FALSE FUNC GREATERTHAN ID ID_FUNC IF IN LBRACE LESSTHAN LET LPAREN MINUS NIL NUMBER OR PLUS RBRACE RPAREN STRING THEN TIMES TRUE UMINUS VALglobal_facts : facts exec_linefacts : func_def factsfacts : assign factsfacts :func_def : FUNC ID_FUNC LBRACE params RBRACE ASSIGN stm END\n   params : ID_FUNC COMMA params \n          | ID COMMA params\n   \n   params : ID_FUNC \n          | ID\n   assign : VAL ID ASSIGN stm ENDstm : ID_FUNC LBRACE args RBRACE\n   args : ID_FUNC COMMA args\n        | stm COMMA args\n        | ID_FUNC\n        | stm\n   \n   stm  : stm PLUS stm\n        | stm MINUS stm\n        | stm TIMES stm\n        | stm DIVIDE stm\n        | stm DOT stm \n        | stm LESSTHAN stm \n        | stm GREATERTHAN stm \n        | stm EQUAL stm \n        | stm AND stm \n        | stm OR stm\n   stm : STRINGstm : NUMBER\n  stm : TRUE\n      | FALSE\n  stm : NILstm : IDstm : LPAREN stm RPARENstm : IF stm THEN stm ELSE stm ENDstm : LET facts IN stm ENDstm : MINUS stm %prec UMINUSexec_line : EXEC stmempty :'
    
_lr_action_items = {'EXEC':([0,2,3,4,9,10,65,80,],[-4,8,-4,-4,-2,-3,-10,-5,]),'FUNC':([0,3,4,24,65,80,],[5,5,5,5,-10,-5,]),'VAL':([0,3,4,24,65,80,],[6,6,6,6,-10,-5,]),'$end':([1,7,13,16,17,18,19,20,21,38,46,47,48,49,50,51,52,53,54,55,59,67,77,81,],[0,-1,-36,-26,-27,-28,-29,-30,-31,-35,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-32,-11,-34,-33,]),'IN':([3,4,9,10,24,41,65,80,],[-4,-4,-2,-3,-4,61,-10,-5,]),'ID_FUNC':([5,8,15,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,60,61,62,64,66,68,72,76,],[11,14,14,14,14,42,14,14,14,14,14,14,14,14,14,14,14,56,14,14,42,42,56,56,14,14,]),'ID':([6,8,15,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,60,61,62,64,66,68,72,76,],[12,21,21,21,21,44,21,21,21,21,21,21,21,21,21,21,21,21,21,21,44,44,21,21,21,21,]),'STRING':([8,15,22,23,26,27,28,29,30,31,32,33,34,35,36,37,60,61,66,68,72,76,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'NUMBER':([8,15,22,23,26,27,28,29,30,31,32,33,34,35,36,37,60,61,66,68,72,76,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'TRUE':([8,15,22,23,26,27,28,29,30,31,32,33,34,35,36,37,60,61,66,68,72,76,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'FALSE':([8,15,22,23,26,27,28,29,30,31,32,33,34,35,36,37,60,61,66,68,72,76,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'NIL':([8,15,22,23,26,27,28,29,30,31,32,33,34,35,36,37,60,61,66,68,72,76,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'LPAREN':([8,15,22,23,26,27,28,29,30,31,32,33,34,35,36,37,60,61,66,68,72,76,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'IF':([8,15,22,23,26,27,28,29,30,31,32,33,34,35,36,37,60,61,66,68,72,76,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'LET':([8,15,22,23,26,27,28,29,30,31,32,33,34,35,36,37,60,61,66,68,72,76,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'MINUS':([8,13,15,16,17,18,19,20,21,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,45,46,47,48,49,50,51,52,53,54,55,58,59,60,61,66,67,68,69,70,72,76,77,78,79,81,],[15,28,15,-26,-27,-28,-29,-30,-31,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-35,28,28,28,-16,-17,-18,-19,28,28,28,28,28,28,28,-32,15,15,15,-11,15,28,28,15,15,-34,28,28,-33,]),'LBRACE':([11,14,56,],[25,37,37,]),'ASSIGN':([12,63,],[26,72,]),'PLUS':([13,16,17,18,19,20,21,38,39,40,45,46,47,48,49,50,51,52,53,54,55,58,59,67,69,70,77,78,79,81,],[27,-26,-27,-28,-29,-30,-31,-35,27,27,27,-16,-17,-18,-19,27,27,27,27,27,27,27,-32,-11,27,27,-34,27,27,-33,]),'TIMES':([13,16,17,18,19,20,21,38,39,40,45,46,47,48,49,50,51,52,53,54,55,58,59,67,69,70,77,78,79,81,],[29,-26,-27,-28,-29,-30,-31,-35,29,29,29,29,29,-18,-19,29,29,29,29,29,29,29,-32,-11,29,29,-34,29,29,-33,]),'DIVIDE':([13,16,17,18,19,20,21,38,39,40,45,46,47,48,49,50,51,52,53,54,55,58,59,67,69,70,77,78,79,81,],[30,-26,-27,-28,-29,-30,-31,-35,30,30,30,30,30,-18,-19,30,30,30,30,30,30,30,-32,-11,30,30,-34,30,30,-33,]),'DOT':([13,16,17,18,19,20,21,38,39,40,45,46,47,48,49,50,51,52,53,54,55,58,59,67,69,70,77,78,79,81,],[31,-26,-27,-28,-29,-30,-31,-35,31,31,31,-16,-17,-18,-19,31,-21,-22,-23,-24,-25,31,-32,-11,31,31,-34,31,31,-33,]),'LESSTHAN':([13,16,17,18,19,20,21,38,39,40,45,46,47,48,49,50,51,52,53,54,55,58,59,67,69,70,77,78,79,81,],[32,-26,-27,-28,-29,-30,-31,-35,32,32,32,-16,-17,-18,-19,32,None,None,None,32,32,32,-32,-11,32,32,-34,32,32,-33,]),'GREATERTHAN':([13,16,17,18,19,20,21,38,39,40,45,46,47,48,49,50,51,52,53,54,55,58,59,67,69,70,77,78,79,81,],[33,-26,-27,-28,-29,-30,-31,-35,33,33,33,-16,-17,-18,-19,33,None,None,None,33,33,33,-32,-11,33,33,-34,33,33,-33,]),'EQUAL':([13,16,17,18,19,20,21,38,39,40,45,46,47,48,49,50,51,52,53,54,55,58,59,67,69,70,77,78,79,81,],[34,-26,-27,-28,-29,-30,-31,-35,34,34,34,-16,-17,-18,-19,34,None,None,None,34,34,34,-32,-11,34,34,-34,34,34,-33,]),'AND':([13,16,17,18,19,20,21,38,39,40,45,46,47,48,49,50,51,52,53,54,55,58,59,67,69,70,77,78,79,81,],[35,-26,-27,-28,-29,-30,-31,-35,35,35,35,-16,-17,-18,-19,35,-21,-22,-23,-24,-25,35,-32,-11,35,35,-34,35,35,-33,]),'OR':([13,16,17,18,19,20,21,38,39,40,45,46,47,48,49,50,51,52,53,54,55,58,59,67,69,70,77,78,79,81,],[36,-26,-27,-28,-29,-30,-31,-35,36,36,36,-16,-17,-18,-19,36,-21,-22,-23,-24,-25,36,-32,-11,36,36,-34,36,36,-33,]),'RPAREN':([16,17,18,19,20,21,38,39,46,47,48,49,50,51,52,53,54,55,59,67,77,81,],[-26,-27,-28,-29,-30,-31,-35,59,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-32,-11,-34,-33,]),'THEN':([16,17,18,19,20,21,38,40,46,47,48,49,50,51,52,53,54,55,59,67,77,81,],[-26,-27,-28,-29,-30,-31,-35,60,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-32,-11,-34,-33,]),'END':([16,17,18,19,20,21,38,45,46,47,48,49,50,51,52,53,54,55,59,67,70,77,78,79,81,],[-26,-27,-28,-29,-30,-31,-35,65,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-32,-11,77,-34,80,81,-33,]),'COMMA':([16,17,18,19,20,21,38,42,44,46,47,48,49,50,51,52,53,54,55,56,58,59,67,77,81,],[-26,-27,-28,-29,-30,-31,-35,62,64,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,66,68,-32,-11,-34,-33,]),'RBRACE':([16,17,18,19,20,21,38,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,67,71,73,74,75,77,81,],[-26,-27,-28,-29,-30,-31,-35,-8,63,-9,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-14,67,-15,-32,-11,-6,-7,-12,-13,-34,-33,]),'ELSE':([16,17,18,19,20,21,38,46,47,48,49,50,51,52,53,54,55,59,67,69,77,81,],[-26,-27,-28,-29,-30,-31,-35,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-32,-11,76,-34,-33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'global_facts':([0,],[1,]),'facts':([0,3,4,24,],[2,9,10,41,]),'func_def':([0,3,4,24,],[3,3,3,3,]),'assign':([0,3,4,24,],[4,4,4,4,]),'exec_line':([2,],[7,]),'stm':([8,15,22,23,26,27,28,29,30,31,32,33,34,35,36,37,60,61,66,68,72,76,],[13,38,39,40,45,46,47,48,49,50,51,52,53,54,55,58,69,70,58,58,78,79,]),'params':([25,62,64,],[43,71,73,]),'args':([37,66,68,],[57,74,75,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> global_facts","S'",1,None,None,None),
  ('global_facts -> facts exec_line','global_facts',2,'p_global_facts','parser.py',9),
  ('facts -> func_def facts','facts',2,'p_facts_func','parser.py',17),
  ('facts -> assign facts','facts',2,'p_facts_assign','parser.py',21),
  ('facts -> <empty>','facts',0,'p_facts_empty','parser.py',25),
  ('func_def -> FUNC ID_FUNC LBRACE params RBRACE ASSIGN stm END','func_def',8,'p_func_def','parser.py',30),
  ('params -> ID_FUNC COMMA params','params',3,'p_params_func','parser.py',42),
  ('params -> ID COMMA params','params',3,'p_params_func','parser.py',43),
  ('params -> ID_FUNC','params',1,'p_params_ID','parser.py',50),
  ('params -> ID','params',1,'p_params_ID','parser.py',51),
  ('assign -> VAL ID ASSIGN stm END','assign',5,'p_assign','parser.py',58),
  ('stm -> ID_FUNC LBRACE args RBRACE','stm',4,'p_id_func','parser.py',66),
  ('args -> ID_FUNC COMMA args','args',3,'p_args','parser.py',78),
  ('args -> stm COMMA args','args',3,'p_args','parser.py',79),
  ('args -> ID_FUNC','args',1,'p_args','parser.py',80),
  ('args -> stm','args',1,'p_args','parser.py',81),
  ('stm -> stm PLUS stm','stm',3,'p_stm_binop','parser.py',117),
  ('stm -> stm MINUS stm','stm',3,'p_stm_binop','parser.py',118),
  ('stm -> stm TIMES stm','stm',3,'p_stm_binop','parser.py',119),
  ('stm -> stm DIVIDE stm','stm',3,'p_stm_binop','parser.py',120),
  ('stm -> stm DOT stm','stm',3,'p_stm_binop','parser.py',121),
  ('stm -> stm LESSTHAN stm','stm',3,'p_stm_binop','parser.py',122),
  ('stm -> stm GREATERTHAN stm','stm',3,'p_stm_binop','parser.py',123),
  ('stm -> stm EQUAL stm','stm',3,'p_stm_binop','parser.py',124),
  ('stm -> stm AND stm','stm',3,'p_stm_binop','parser.py',125),
  ('stm -> stm OR stm','stm',3,'p_stm_binop','parser.py',126),
  ('stm -> STRING','stm',1,'p_stm_string','parser.py',134),
  ('stm -> NUMBER','stm',1,'p_stm_number','parser.py',140),
  ('stm -> TRUE','stm',1,'p_stm_bool','parser.py',147),
  ('stm -> FALSE','stm',1,'p_stm_bool','parser.py',148),
  ('stm -> NIL','stm',1,'p_stm_nil','parser.py',155),
  ('stm -> ID','stm',1,'p_stm_id','parser.py',161),
  ('stm -> LPAREN stm RPAREN','stm',3,'p_stm_group','parser.py',166),
  ('stm -> IF stm THEN stm ELSE stm END','stm',7,'p_stm_if','parser.py',170),
  ('stm -> LET facts IN stm END','stm',5,'p_stm_let','parser.py',176),
  ('stm -> MINUS stm','stm',2,'p_stm_uminus','parser.py',182),
  ('exec_line -> EXEC stm','exec_line',2,'p_exec_line','parser.py',188),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',193),
]
